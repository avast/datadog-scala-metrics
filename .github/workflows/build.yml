name: Build

on:
  release:
    types: [published]
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'
jobs:
  build:
    env:
      JAVA_OPTS: -Dsbt.boot.lock=false
      JVM_OPTS: -Dsbt.boot.lock=false
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.12, 2.13.5, 3.0.0-RC1]
        java: [adopt@1.8, adopt@1.11, adopt@1.13]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Debug info
      run: echo ref:${{github.ref}}
    - name: Checkout current branch (full)
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Java and Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ matrix.java }}
    - name: Test
      run: sbt ++${{matrix.scala}} checkAll
    - name: Cache sbt
      uses: actions/cache@v2
      with:
        path: |
          ~/.sbt
          ~/.ivy2/cache
          ~/.coursier/cache/v1
          ~/.cache/coursier/v1
          ~/AppData/Local/Coursier/Cache/v1
          ~/Library/Caches/Coursier/v1
        key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}
    - name: Compress target directories
      run: tar cf targets.tar code/*/target project/target
    - name: Upload target directories
      uses: actions/upload-artifact@v2
      with:
        name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
        path: targets.tar
  publish:
    timeout-minutes: 30
    if: github.ref == 'refs/heads/master' || contains(github.ref, 'refs/tags/v' )
    needs: [build]
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.12]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout current branch (full)
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup Java and Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ matrix.java }}

    - name: Cache sbt
      uses: actions/cache@v2
      with:
        path: |
          ~/.sbt
          ~/.ivy2/cache
          ~/.coursier/cache/v1
          ~/.cache/coursier/v1
          ~/AppData/Local/Coursier/Cache/v1
          ~/Library/Caches/Coursier/v1
        key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

    - name: Download target directories ${{ matrix.scala }}
      uses: actions/download-artifact@v2
      with:
        name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}

    - name: Inflate target directories ${{ matrix.scala }}
      run: |
        tar xf targets.tar
        rm targets.tar
    - name: Release
      env:
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSPHRASE }}
      run: sbt ++${{ matrix.scala }} ci-release
    - name: Release Drafter
      uses: release-drafter/release-drafter@v5.6.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems
        restore-keys: |
          ${{ runner.os }}-gems
    - uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.6'
    - name: Install jekyll
      run: |
        export GEM_HOME=$PWD/vendor/bundle
        gem install jekyll -v 4.0.0
    - name: Publish microsite
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
      run: |
        export PATH="$PWD/vendor/bundle/bin:$PATH"
        export GEM_HOME=$PWD/vendor/bundle
        eval "$(ssh-agent -s)"
        ssh-add - <<< "${DEPLOY_KEY}"
        git config --global user.email "datadog4s-bot@github.com"
        git config --global user.name "Release bot"
        sbt site/publishMicrosite
