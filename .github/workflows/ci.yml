# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['*']
  push:
    branches: ['*']
    tags: [v*]

env:
  JAVA_OPTS: '-Dsbt.boot.lock=false'
  JVM_OPTS: '-Dsbt.boot.lock=false'

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.12, 2.13.5, 3.0.0-RC1]
        java: [adopt@1.8, adopt@1.11, adopt@1.13]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Check that workflows are up to date
        run: sbt ++${{ matrix.scala }} githubWorkflowCheck

      - name: Build project
        run: sbt ++${{ matrix.scala }} test

      - name: Compress target directories
        run: tar cf targets.tar code/jvm/target code/http4s/target site/target code/statsd/target code/playground/target target code/common/target code/api/target project/target

      - name: Upload target directories
        uses: actions/upload-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && ((startsWith(github.ref, 'refs/heads/') && contains(github.ref, '*')))
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.12]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Download target directories (2.12.12)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-2.12.12-${{ matrix.java }}

      - name: Inflate target directories (2.12.12)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.13.5)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-2.13.5-${{ matrix.java }}

      - name: Inflate target directories (2.13.5)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (3.0.0-RC1)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-3.0.0-RC1-${{ matrix.java }}

      - name: Inflate target directories (3.0.0-RC1)
        run: |
          tar xf targets.tar
          rm targets.tar

      - run: sbt ++${{ matrix.scala }} ci-release

      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: release-drafter/release-drafter@v5.6.1

      - env:
          path: vendor/bundle
          key: ${{ runner.os }}-gems
          restore-keys: ${{ runner.os }}-gems
        uses: actions/cache@v1

      - env:
          ruby-version: 2.6
        uses: actions/setup-ruby@v1

      - run: |
          export GEM_HOME=$PWD/vendor/bundle
          gem install jekyll -v 4.0.0

      - env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
          GIT_SSH_COMMAND: '"ssh -o StrictHostKeyChecking=no"'
        run: |
          export PATH="$PWD/vendor/bundle/bin:$PATH"
          export GEM_HOME=$PWD/vendor/bundle
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${DEPLOY_KEY}"
          git config --global user.email "datadog4s-bot@github.com"
          git config --global user.name "Release bot"
          sbt site/publishMicrosite